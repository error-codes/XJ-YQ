<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.young.xjyq.mapper.VideoMapper">

    <select id="readVideoById" resultType="com.young.xjyq.entity.Video">
        select *
        from video
        where id = #{id}
    </select>

    <select id="readVideoByUrl" resultType="com.young.xjyq.entity.Video">
        select *
        from video
        where url = #{url}
    </select>

    <select id="countFinallyVideo" resultType="java.lang.Integer">
        select COUNT(id)
        from video
        <where>
            <if test="startTime!=null and endTime!=null">
                and create_time between #{startTime} and #{endTime}
            </if>
            <if test="author!=null and author!=''">
                and `source` like concat('%', #{author}, '%')
            </if>
            and deleted = 0 and status = 1
        </where>
    </select>

    <select id="readAllVideo" resultType="com.young.xjyq.entity.Video">
        select * from video
        <where>
            <if test="startTime!=null and endTime!=null">
                and create_time between #{startTime} and #{endTime}
            </if>
            <if test="author!=null and author!=''">
                and `source` like concat('%', #{author}, '%')
            </if>
            and deleted = 0
        </where>
        order by create_time desc
        <if test="page!=null and pageSize!=''">
            limit #{page}, #{pageSize}
        </if>
    </select>

    <select id="readFinallyVideo" resultType="com.young.xjyq.entity.Video">
        select * from video
        <where>
            <if test="startTime!=null and endTime!=null">
                and create_time between #{startTime} and #{endTime}
            </if>
            <if test="author!=null and author!=''">
                and `source` like concat('%', #{author}, '%')
            </if>
            and deleted = 0 and status = 1
        </where>
        order by create_time desc
        <if test="page!=null and pageSize!=null">
            limit #{page}, #{pageSize}
        </if>
    </select>

    <update id="updateVideoById">
        update video
        <set>
            <if test="status!=null">
                status=#{status},
            </if>
            tags=#{tags},
            <if test="faceTaskId!=null">
                face_task_id=#{faceTaskId},
            </if>
            <if test="ocrTaskId!=null">
                ocr_task_id=#{ocrTaskId},
            </if>
            <if test="faceStatus!=null">
                face_status=#{faceStatus},
            </if>
            <if test="ocrStatus!=null">
                ocr_status=#{ocrStatus},
            </if>
            <if test="illegal!=null">
                illegal=#{illegal},
            </if>
            update_time=now()
        </set>
        where id=#{id}
    </update>

    <update id="batchDeleteVideo">
        update video set deleted = 1
        <where>
            id in
            <choose>
                <when test="ids!=null and ids.size()>0">
                    <foreach collection="ids" item="id" open="(" separator="," close=")">
                        #{id}
                    </foreach>
                </when>
                <otherwise>
                    ('')
                </otherwise>
            </choose>
        </where>
    </update>

    <insert id="createVideo" parameterType="com.young.xjyq.entity.Video">
        insert into video values
        <foreach collection="videos" item="video" separator=",">
            ( #{video.id}, #{video.url}, #{video.tags}, #{video.source},
                #{video.status}, #{video.createTime}, #{video.updateTime},
                #{video.deleted}, #{video.faceTaskId}, #{video.ocrTaskId},
                #{video.faceStatus}, #{video.ocrStatus}, #{video.siteUrl},
                #{video.coverImg}, #{video.illegal})
        </foreach>
        on duplicate key update url = values(url)
    </insert>
</mapper>